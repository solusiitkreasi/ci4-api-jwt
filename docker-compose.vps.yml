version: '3.8'

services:
  # PHP Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ci4_api_jwt_app
    volumes:
      - .:/var/www/html
      - ./writable:/var/www/html/writable
    environment:
      - CI_ENVIRONMENT=production
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - mysql
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: ci4_api_jwt_nginx
    ports:
      - "8081:80"  # Port sesuai dengan setup Anda
    volumes:
      - .:/var/www/html
      - ./docker/nginx/aapanel-demo.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: ci4_api_jwt_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: demo_db
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_PASSWORD: userpassword
      MYSQL_USER: demo_user
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
      - manajemen_network  # Untuk akses phpMyAdmin shared
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache Service
  redis:
    image: redis:alpine
    container_name: ci4_api_jwt_redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes --requirepass ci4redis2024

networks:
  app-network:
    driver: bridge
  manajemen_network:
    external: true  # Network eksternal untuk phpMyAdmin shared

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
