# Docker Compose untuk Demo Environment dengan Shared phpMyAdmin
version: '3.8'

services:
  # Nginx Web Server
  nginx-demo:
    image: nginx:alpine
    container_name: nginx-demo-ci4api
    ports:
      - "8081:80"  # Port untuk Cloudflare tunnel
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/aapanel-demo.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - demo-network
      - shared-network  # Connect ke shared network untuk phpMyAdmin
    restart: unless-stopped

  # PHP-FPM Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: app-demo-ci4api
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql-demo
      - redis-demo
    networks:
      - demo-network
      - shared-network  # Connect ke shared network
    restart: unless-stopped
    environment:
      - CI_ENVIRONMENT=production

  # MySQL Database (akan diakses oleh shared phpMyAdmin)
  mysql-demo:
    image: mysql:8.0
    container_name: mysql-demo-ci4api
    ports:
      - "3309:3306"  # Avoid conflict dengan MySQL lain
    volumes:
      - mysql-demo-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: demo_db
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: userpassword
    networks:
      - demo-network
      - shared-network  # Connect ke shared network untuk phpMyAdmin
      - shared-network  # Connect ke shared network untuk phpMyAdmin
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    labels:
      # Labels untuk identifikasi di phpMyAdmin
      - "project=ci4-api-jwt-demo"
      - "environment=demo"
      - "database=${DB_DATABASE}"
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - demo-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis-demo:
    image: redis:alpine
    container_name: redis-demo-ci4api
    ports:
      - "6382:6379"  # Avoid conflict dengan Redis di port 6379 & 6381
    volumes:
      - redis-demo-data:/data
    networks:
      - demo-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

volumes:
  mysql-demo-data:
  redis-demo-data:

networks:
  demo-network:
    driver: bridge
  shared-network:
    external: true  # External network untuk shared phpMyAdmin
